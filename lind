#!/bin/bash

cwd="$PWD"
extra_args=('-a')
usage="usage: ${0##*/} [-a <sel_ldr extra args>] [-l <blob library>] [-fghsvx] <lind program path>"
trap 'cd "$cwd"' EXIT

# check for xtrace flag
while getopts :a:l:fghsvx opt; do
	case "$opt" in
	# append custom args
	a)
		readarray -td' ' extra_args < <(printf '%s ' "${extra_args[@]}" "$OPTARG")
		;;
	# enable fuzz testing (quit after leading nacl app)
	f)
		if [[ "${extra_args[*]}" != *-F* ]]; then extra_args=('-F'); fi
		;;
	# enable gdb debug stub
	g)
		if [[ "${extra_args[*]}" != *-g* ]]; then extra_args=('-g'); fi
		;;
	# add blob library
	l)
		extra_args+=('-B' "$OPTARG")
		;;
	# enable signal handling
	s)
		if [[ "${extra_args[*]}" != *-S* ]]; then extra_args=('-S'); fi
		;;
	# increase verbosity
	v)
		extra_args+=('-v')
		;;
	# use xtrace
	x)
		set -o xtrace
		;;
	# show sel_ldr -h and usage
	h)
		sel_ldr -h
		printf '\n%s\n' "$usage" >&2
		exit
		;;
	# show error and usage
	:|?)
		printf '\nillegal option letter: %s\n\n%s\n' "'$OPTARG'" "$usage" >&2
		exit 1
		;;
	esac
done
shift "$((OPTIND - 1))"

export LIND_PREFIX="${LIND_PREFIX:-$HOME}"
export LIND_BASE="${LIND_BASE:-$LIND_PREFIX/lind_project}"
export LIND_SRC="${LIND_SRC:-$LIND_BASE/lind}"
export LIND_MONITOR="${LIND_MONITOR:-$LIND_BASE/reference_monitor}"
export REPY_PATH="${REPY_PATH:-$LIND_SRC/repy}"
export NACL_SDK_ROOT="${NACL_SDK_ROOT:-$REPY_PATH/sdk}"
export PYTHON="${PYTHON:-python2}"
export PNACLPYTHON="${PNACLPYTHON:-python2}"
export LD_LIBRARY_PATH="${LD_LIBRARY_PATH:-/lib/glibc}"

cd "$REPY_PATH/repy" || exit 1

sel_ldr "${extra_args[@]}" -- "$LD_LIBRARY_PATH/runnable-ld.so" --library-path "$LD_LIBRARY_PATH" "$@"
